services:
  postgres:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis_db
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  minio:
    image: minio/minio
    restart: always
    command: ["server", "--console-address", ":9001", "/data"]
    ports:
      - "9005:9001"
      - "9004:9000"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_PASSWORD: pictshare-book
      MINIO_ROOT_USER: pictshare-book
      MINIO_SITE_REGION: eu-central-1
      MINIO_ACCESS_KEY: pictshare-book
      MINIO_SECRET_KEY: pictshare-book
    networks:
      - app_network

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc config host add minio http://minio:9000 pictshare-book pictshare-book;
      /usr/bin/mc mb minio/pictshare-book;
      /usr/bin/mc policy set public minio/pictshare-book;
      exit 0;
      "
    networks:
      - app_network

volumes:
  postgres_data:
  redis_data:
  minio_storage:

networks:
  app_network:
    driver: bridge
